[package]
description = "Parity Ethereum (EthCore) Library"
homepage = "http://parity.io"
license = "GPL-3.0"
name = "ethcore"
version = "1.12.0"
authors = ["Parity Technologies <admin@parity.io>"]

[dependencies]
account-db = { path = "account-db", optional = true }
account-state = { path = "account-state" }
ansi_term = "0.11"
basic-authority = { path = "./engines/basic-authority", optional = true} # used by test-helpers feature
blooms-db = { path = "../util/blooms-db", optional = true }
client-traits = { path = "./client-traits" }
common-types = { path = "types" }
engine = { path = "./engine" }
env_logger = { version = "0.5", optional = true }
ethabi = "8.0"
ethabi-contract = "8.0"
ethabi-derive = "8.0"
ethash = { path = "../ethash", optional = true }
ethjson = { path = "../json", optional = true }
ethkey = { path = "../accounts/ethkey", optional = true }
ethcore-blockchain = { path = "./blockchain" }
ethcore-call-contract = { path = "./call-contract" }
ethcore-db = { path = "./db" }
ethcore-io = { path = "../util/io" }
ethcore-miner = { path = "../miner" }
ethcore-stratum = { path = "../miner/stratum", optional = true }
ethereum-types = "0.6.0"
evm = { path = "evm" }
executive-state = { path = "executive-state" }
futures = "0.1"
hash-db = "0.15.0"
itertools = "0.5"
journaldb = { path = "../util/journaldb" }
keccak-hash = "0.2.0"
kvdb = "0.1"
kvdb-memorydb = { version = "0.1", optional = true }

#kvdb-rocksdb13 = { version = "0.1.3", package = "kvdb-rocksdb", optional = true }
kvdb-rocksdb1 = { git = "https://github.com/yijie37/kvdb-rocksdb-com.git", rev = '2355525093d46a99a435dc25bd24a24114946e11', optional = true }
#kvdb-rocksdb = { version = "0.1.3", optional = true }
#kvdb-rocksdb = {git = 'https://github.com/paritytech/parity-common.git', rev = 'b0317f649ab2c665b7987b8475878fc4d2e1f81d', optional = true }
#kvdb-rocksdb = {git = 'https://github.com/paritytech/parity-common.git', rev = '4361025763d7144451c5d5d6f96d3219f6a459f6', optional = true }
lazy_static = { version = "1.3", optional = true }
log = "0.4"
macros = { path = "../util/macros", optional = true }
machine = { path = "./machine" }
memory-cache = { path = "../util/memory-cache" }
parity-bytes = "0.1"
parking_lot = "0.8"
pod = { path = "pod", optional = true }
trie-db = "0.15.0"
patricia-trie-ethereum = { path = "../util/patricia-trie-ethereum" }
rand = "0.6"
rand_xorshift = "0.1.1"
rayon = "1.1"
rlp = "0.4.0"
rlp_derive = { path = "../util/rlp-derive" }
rustc-hex = { version = "1", optional = true }
serde = "1.0"
serde_derive = "1.0"
snapshot = { path = "snapshot" }
spec = { path = "spec" }
state-db = { path = "state-db" }
tempdir = { version = "0.3", optional = true }
trace = { path = "trace" }
trace-time = "0.1"
trie-vm-factories = { path = "trie-vm-factories" }
triehash-ethereum = { version = "0.2",  path = "../util/triehash-ethereum" }
unexpected = { path = "../util/unexpected" }
using_queue = { path = "../miner/using-queue" }
verification = { path = "./verification" }
vm = { path = "vm" }

[dev-dependencies]
account-db = { path = "account-db" }
blooms-db = { path = "../util/blooms-db" }
ethcore-builtin = { path = "./builtin" }
#criterion = "0.3"
criterion = "0.2.7"
engine = { path = "./engine", features = ["test-helpers"] }
env_logger = "0.5"
ethash = { path = "../ethash" }
ethcore-accounts = { path = "../accounts" }
ethjson = { path = "../json" }
ethkey = { path = "../accounts/ethkey" }
fetch = { path = "../util/fetch" }
kvdb-memorydb = "0.1"
kvdb-rocksdb1 = { git = "https://github.com/yijie37/kvdb-rocksdb-com.git", rev = '2355525093d46a99a435dc25bd24a24114946e11' }
#kvdb-rocksdb13 = { version = "0.1.3", package = "kvdb-rocksdb"}
#kvdb-rocksdb = "0.1.3"
#kvdb-rocksdb = {git = 'https://github.com/paritytech/parity-common.git', rev = 'b0317f649ab2c665b7987b8475878fc4d2e1f81d'}
#kvdb-rocksdb = {git = 'https://github.com/paritytech/parity-common.git', rev = '4361025763d7144451c5d5d6f96d3219f6a459f6'}
lazy_static = { version = "1.3" }
machine = { path = "./machine", features = ["test-helpers"] }
macros = { path = "../util/macros" }
null-engine = { path = "./engines/null-engine" }
parity-runtime = { path = "../util/runtime" }
pod = { path = "pod" }
rlp_compress = { path = "../util/rlp-compress" }
rustc-hex = "1"
serde_json = "1.0"
stats = { path = "../util/stats" }
tempdir = "0.3"
trie-standardmap = "0.15.0"

[features]
parity = ["work-notify", "price-info", "stratum", "macros"]
# Large optional features that are enabled by default for Parity,
# but might be omitted for other dependent crates.
work-notify = ["ethcore-miner/work-notify"]
price-info = ["ethcore-miner/price-info"]
stratum = ["ethcore-stratum"]

# Disables seal verification for mined blocks.
# This allows you to submit any seal via RPC to test and benchmark
# how fast pending block get's created while running on the mainnet.
miner-debug = []
# Display EVM debug traces.
evm-debug = ["evm/evm-debug"]
# Display EVM debug traces when running tests.
evm-debug-tests = ["evm-debug", "evm/evm-debug-tests"]
# Measure time of transaction execution.
# Whenever the transaction execution time (in millis) exceeds the value of
# SLOW_TX_DURATION env variable (provided compile time!)
# EVM debug traces are printed.
slow-blocks = []
# Run JSON consensus tests.
json-tests = ["env_logger", "test-helpers", "lazy_static", "machine/test-helpers"]
# Skip JSON consensus tests with pending issues.
ci-skip-tests = []
# Run memory/cpu heavy tests.
test-heavy = []
# Compile test helpers
# note[dvdplm]: "basic-authority/test-helpers" is needed so that `generate_dummy_client_with_spec` works
test-helpers = [
    "account-db",
    "blooms-db",
    "ethash",
    "ethjson",
    "ethkey",
    "kvdb-memorydb",
    "kvdb-rocksdb1",
    "macros",
    "pod",
    "rustc-hex",
    "tempdir",
    "basic-authority/test-helpers"
 ]

[[bench]]
name = "builtin"
harness = false

[lib]
path = "src/lib.rs"

